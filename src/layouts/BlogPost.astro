---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";
import BaseLayout from "./BaseLayout.astro";
import SEOArticle from "../components/SEOArticle.astro";
import { KEYWORDS } from "../consts";
import CTAColor from "../components/CTAColor.astro";
import flyWithUsCTA from "../data/CTAFlight";

type Props = CollectionEntry<"blog">["data"];

const {
  title,
  author,
  description,
  pubDate,
  updatedDate,
  heroImage,
  category,
  tags,
  keywords,
  readingTime,
} = Astro.props;

// Enhanced BlogPosting schema with more details
const blogPostingSchema = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: title,
  description: description,
  image: {
    "@type": "ImageObject",
    url: heroImage,
    width: 1200,
    height: 630,
  },
  author: {
    "@type": "Person",
    name: author,
    affiliation: {
      "@type": "Organization",
      name: "LA Flight Academy",
    },
  },
  publisher: {
    "@type": "Organization",
    name: "LA Flight Academy",
    logo: {
      "@type": "ImageObject",
      url: "https://laflightacademy.com/LA-Flight-Academy-logo-blue.png",
      width: 300,
      height: 100,
    },
  },
  datePublished: pubDate,
  dateModified: updatedDate || pubDate,
  mainEntityOfPage: {
    "@type": "WebPage",
    "@id": Astro.url.href,
  },
  articleSection: category,
  keywords: tags.join(", "),
  wordCount: readingTime ? readingTime * 200 : null,
  timeRequired: readingTime ? `PT${readingTime}M` : null,
  inLanguage: "en-US",
  isAccessibleForFree: true,
  about: {
    "@type": "Thing",
    name: "Flight Training",
    description: "Professional aviation training and pilot education",
  },
};

// Enhanced BreadcrumbList schema
const breadcrumbSchema = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: [
    {
      "@type": "ListItem",
      position: 1,
      name: "Home",
      item: {
        "@type": "WebPage",
        "@id": Astro.site?.toString(),
        name: "Home",
      },
    },
    {
      "@type": "ListItem",
      position: 2,
      name: "Blog",
      item: {
        "@type": "WebPage",
        "@id": new URL("/blog", Astro.site).href,
        name: "Aviation Blog",
      },
    },
    {
      "@type": "ListItem",
      position: 3,
      name: title,
      item: {
        "@type": "WebPage",
        "@id": Astro.url.href,
        name: title,
      },
    },
  ],
};
---

<BaseLayout
  siteTitle={title + " | Blog | LA Flight Academy"}
  siteDescription={description +
    " Read more aviation tips and flight training insights on the LA Flight Academy blog."}
  keywords={category +
    ", " +
    tags.join(", ") +
    (keywords ? ", " + keywords : ", " + KEYWORDS)}
  ogImage={heroImage}
>
  <!-- Enhanced SEO for articles -->
  <SEOArticle
    title={title}
    description={description}
    author={author}
    publishDate={pubDate}
    modifiedDate={updatedDate}
    image={heroImage}
    url={Astro.url.href}
    category={category}
    tags={tags}
    readingTime={readingTime}
  />

  <script
    type="application/ld+json"
    set:html={JSON.stringify(breadcrumbSchema)}
  />
  <script
    type="application/ld+json"
    set:html={JSON.stringify(blogPostingSchema)}
  />

  <div class="h-20 lg:h-32 w-full bg-white"></div>

  <section
    class="flex justify-center pt-2 bg-gradient-to-b from-primary-50 to-primary-100"
  >
    <article class="mx-auto max-w-4xl mb-16">
      <div
        class="mb-12 lg:mb-0 aspect-square lg:aspect-video lg:rounded-t-md shadow-md overflow-hidden"
      >
        {
          heroImage && (
            <img
              class="object-cover h-full w-full bg-white"
              loading="eager"
              src={heroImage}
              alt={title}
            />
          )
        }
      </div>
      <div
        class="mx-auto max-w-4xl bg-white pt-12 pb-32 px-5 lg:px-10 shadow-xl rounded-md"
      >
        <div class="title">
          <div class="date">
            <FormattedDate date={pubDate} />
            {
              updatedDate && (
                <div class="last-updated-on">
                  Last updated on <FormattedDate date={updatedDate} />
                </div>
              )
            }
          </div>
          <h1 class="text-5xl my-6 font-serif font-semibold">{title}</h1>
          <p class="text-sm font-light">
            Published by: <strong class="font-bold ml-2">{author}</strong>
          </p>
          <div class="md:flex mt-6 mb-10 gap-2 hidden">
            <span
              class="bg-primary-600 text-sm text-white inline-block px-3 py-1 rounded-md"
            >
              {category}
            </span>
            {
              tags
                .slice(0, 3)
                .map((tag) => (
                  <span
                    class={`bg-primary-500 text-sm text-white inline-block px-3 py-1 rounded-md`}
                  >
                    {tag}
                  </span>
                ))
            }
          </div>
          <hr />
        </div>
        <div
          class="prose w-full max-w-4xl px-5 prose-img:w-full prose-img:shadow-md prose-em:text-center prose-em:mx-auto prose-em:text-muted-800 prose-em:text-base prose-p:font-sans prose-h2:text-3xl prose-p:text-xl prose-strong:font-semibold prose-a:text-primary-600"
        >
          <slot />
        </div>
      </div>
    </article>
  </section>
  <CTAColor content={flyWithUsCTA} />
</BaseLayout>
